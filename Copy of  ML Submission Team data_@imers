{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"private_outputs":true,"provenance":[{"file_id":"1HY582r_Q5Yc8jrSbIQ_tjx_xkn2SIGqm","timestamp":1670424203784},{"file_id":"10B2s5af8INkHgIz_7XBjW3iNDbGY7ltx","timestamp":1670325875640}],"collapsed_sections":["vncDsAP0Gaoa","FJNUwmbgGyua","w6K7xa23Elo4","yQaldy8SH6Dl","mDgbUHAGgjLW","O_i_v8NEhb9l","HhfV-JJviCcP","Y3lxredqlCYt","3RnN4peoiCZX","x71ZqKXriCWQ","7hBIi_osiCS2","JlHwYmJAmNHm","35m5QtbWiB9F","PoPl-ycgm1ru","H0kj-8xxnORC","nA9Y7ga8ng1Z","PBTbrJXOngz2","u3PMJOP6ngxN","dauF4eBmngu3","bKJF3rekwFvQ","MSa1f5Uengrz","GF8Ens_Soomf","0wOQAZs5pc--","K5QZ13OEpz2H","lQ7QKXXCp7Bj","448CDAPjqfQr","KSlN3yHqYklG","t6dVpIINYklI","ijmpgYnKYklI","-JiQyfWJYklI","EM7whBJCYoAo","fge-S5ZAYoAp","85gYPyotYoAp","RoGjAbkUYoAp","4Of9eVA-YrdM","iky9q4vBYrdO","F6T5p64dYrdO","y-Ehk30pYrdP","bamQiAODYuh1","QHF8YVU7Yuh3","GwzvFGzlYuh3","qYpmQ266Yuh3","OH-pJp9IphqM","bbFf2-_FphqN","_ouA3fa0phqN","Seke61FWphqN","PIIx-8_IphqN","t27r6nlMphqO","r2jJGEOYphqO","b0JNsNcRphqO","BZR9WyysphqO","jj7wYXLtphqO","eZrbJ2SmphqO","rFu4xreNphqO","YJ55k-q6phqO","gCFgpxoyphqP","OVtJsKN_phqQ","lssrdh5qphqQ","U2RJ9gkRphqQ","1M8mcRywphqQ","tgIPom80phqQ","JMzcOPDDphqR","x-EpHcCOp1ci","X_VqEhTip1ck","8zGJKyg5p1ck","PVzmfK_Ep1ck","n3dbpmDWp1ck","ylSl6qgtp1ck","ZWILFDl5p1ck","M7G43BXep1ck","Ag9LCva-p1cl","E6MkPsBcp1cl","2cELzS2fp1cl","3MPXvC8up1cl","NC_X3p0fY2L0","UV0SzAkaZNRQ","YPEH6qLeZNRQ","q29F0dvdveiT","EXh0U9oCveiU","22aHeOlLveiV","g-ATYxFrGrvw","Yfr_Vlr8HBkt","8yEUt7NnHlrM","tEA2Xm5dHt1r","I79__PHVH19G","Ou-I18pAyIpj","fF3858GYyt-u","4_0_7-oCpUZd","hwyV_J3ipUZe","3yB-zSqbpUZe","dEUvejAfpUZe","Fd15vwWVpUZf","bn_IUdTipZyH","49K5P_iCpZyH","Nff-vKELpZyI","kLW572S8pZyI","dWbDXHzopZyI","yLjJCtPM0KBk","xiyOF9F70UgQ","7wuGOrhz0itI","id1riN9m0vUs","578E2V7j08f6","89xtkJwZ18nB","67NQN5KX2AMe","Iwf50b-R2tYG","GMQiZwjn3iu7","WVIkgGqN3qsr","XkPnILGE3zoT","Hlsf0x5436Go","mT9DMSJo4nBL","c49ITxTc407N","OeJFEK0N496M","9ExmJH0g5HBk","cJNqERVU536h","k5UmGsbsOxih","T0VqWOYE6DLQ","qBMux9mC6MCf","-oLEiFgy-5Pf","C74aWNz2AliB","2DejudWSA-a0","pEMng2IbBLp7","rAdphbQ9Bhjc","TNVZ9zx19K6k","nqoHp30x9hH9","rMDnDkt2B6du","yiiVWRdJDDil","1UUpS68QDMuG","kexQrXU-DjzY","T5CmagL3EC8N","BhH2vgX9EjGr","qjKvONjwE8ra","P1XJ9OREExlT","VFOzZv6IFROw","TIqpNgepFxVj","VfCC591jGiD4","OB4l2ZhMeS1U","ArJBuiUVfxKd","4qY1EAkEfxKe","PiV4Ypx8fxKe","TfvqoZmBfxKf","dJ2tPlVmpsJ0","JWYfwnehpsJ1","-jK_YjpMpsJ2","HAih1iBOpsJ2","zVGeBEFhpsJ2","bmKjuQ-FpsJ3","Fze-IPXLpx6K","7AN1z2sKpx6M","9PIHJqyupx6M","_-qAgymDpx6N","Z-hykwinpx6N","h_CCil-SKHpo","cBFFvTBNJzUa","HvGl1hHyA_VK","EyNgTHvd2WFk","KH5McJBi2d8v","iW_Lq9qf2h6X","-Kee-DAl2viO","gCX9965dhzqZ","gIfDvo9L0UH2"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"gpuClass":"standard","accelerator":"GPU"},"cells":[{"cell_type":"markdown","source":["# **Project Name**    - \n","\n"],"metadata":{"id":"vncDsAP0Gaoa"}},{"cell_type":"code","source":[],"metadata":{"id":"m6fefpIVh1Y9"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":[],"metadata":{"id":"58jjUkHdNYom"}},{"cell_type":"markdown","source":["##### **Project Type**    - Regression\n","##### **Contribution**    - Team\n","##### **Team Member 1 -** - Reena verma \n","##### **Team Member 2 -** - md kamran \n","##### **Team Member 3 -**\n","##### **Team Member 4 -**"],"metadata":{"id":"beRrZCGUAJYm"}},{"cell_type":"markdown","source":["# **Project Summary -**"],"metadata":{"id":"FJNUwmbgGyua"}},{"cell_type":"markdown","source":["Write the summary here within 500-600 words."],"metadata":{"id":"F6v_1wHtG2nS"}},{"cell_type":"markdown","source":["# **GitHub Link -**"],"metadata":{"id":"w6K7xa23Elo4"}},{"cell_type":"markdown","source":["Provide your GitHub Link here."],"metadata":{"id":"h1o69JH3Eqqn"}},{"cell_type":"markdown","source":["# **Problem Statement**\n"],"metadata":{"id":"yQaldy8SH6Dl"}},{"cell_type":"markdown","source":["**Write Problem Statement Here.**"],"metadata":{"id":"DpeJGUA3kjGy"}},{"cell_type":"markdown","source":["# **General Guidelines** : -  "],"metadata":{"id":"mDgbUHAGgjLW"}},{"cell_type":"markdown","source":["1.   Well-structured, formatted, and commented code is required. \n","2.   Exception Handling, Production Grade Code & Deployment Ready Code will be a plus. Those students will be awarded some additional credits. \n","     \n","     The additional credits will have advantages over other students during Star Student selection.\n","       \n","             [ Note: - Deployment Ready Code is defined as, the whole .ipynb notebook should be executable in one go\n","                       without a single error logged. ]\n","\n","3.   Each and every logic should have proper comments.\n","4. You may add as many number of charts you want. Make Sure for each and every chart the following format should be answered.\n","        \n","\n","```\n","# Chart visualization code\n","```\n","            \n","\n","*   Why did you pick the specific chart?\n","*   What is/are the insight(s) found from the chart?\n","* Will the gained insights help creating a positive business impact? \n","Are there any insights that lead to negative growth? Justify with specific reason.\n","\n","5. You have to create at least 15 logical & meaningful charts having important insights.\n","\n","\n","[ Hints : - Do the Vizualization in  a structured way while following \"UBM\" Rule. \n","\n","U - Univariate Analysis,\n","\n","B - Bivariate Analysis (Numerical - Categorical, Numerical - Numerical, Categorical - Categorical)\n","\n","M - Multivariate Analysis\n"," ]\n","\n","\n","\n","\n","\n","6. You may add more ml algorithms for model creation. Make sure for each and every algorithm, the following format should be answered.\n","\n","\n","*   Explain the ML Model used and it's performance using Evaluation metric Score Chart.\n","\n","\n","*   Cross- Validation & Hyperparameter Tuning\n","\n","*   Have you seen any improvement? Note down the improvement with updates Evaluation metric Score Chart.\n","\n","*   Explain each evaluation metric's indication towards business and the business impact pf the ML model used.\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n"],"metadata":{"id":"ZrxVaUj-hHfC"}},{"cell_type":"markdown","source":["# ***Let's Begin !***"],"metadata":{"id":"O_i_v8NEhb9l"}},{"cell_type":"markdown","source":["## ***1. Know Your Data***"],"metadata":{"id":"HhfV-JJviCcP"}},{"cell_type":"markdown","source":["### Import Libraries"],"metadata":{"id":"Y3lxredqlCYt"}},{"cell_type":"code","source":["# Import Libraries\n","import numpy as np\n","import pandas as pd\n","from numpy import math\n","from numpy import loadtxt\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","from matplotlib import rcParams\n","!pip install pymysql\n","import pymysql\n","from sqlalchemy import create_engine\n","from sqlalchemy.pool import NullPool\n","\n","import numpy as np\n","import seaborn as sns\n","from scipy.stats import *\n","import math\n","\n","from statsmodels.stats.outliers_influence import variance_inflation_factor\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.model_selection import train_test_split\n","from imblearn.over_sampling import SMOTE\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.metrics import accuracy_score, confusion_matrix\n","from sklearn import metrics\n","from sklearn.metrics import roc_curve\n","from sklearn.model_selection import GridSearchCV\n","from sklearn.model_selection import RepeatedStratifiedKFold\n","from xgboost import XGBClassifier\n","from xgboost import XGBRFClassifier\n","from sklearn.tree import export_graphviz\n","\n","!pip install shap==0.40.0\n","import shap \n","import graphviz\n","sns.set_style('darkgrid') \n","\n","import warnings\n","warnings.filterwarnings('ignore')"],"metadata":{"id":"M8Vqi-pPk-HR"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Dataset Loading"],"metadata":{"id":"3RnN4peoiCZX"}},{"cell_type":"code","source":["# Load Dataset\n","from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"4CkvbW_SlZ_R"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["dataset = pd.read_csv('/content/drive/MyDrive/ml regression /data_YesBank_StockPrices.csv')"],"metadata":{"id":"9NikXg54QDaK"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Dataset First View"],"metadata":{"id":"x71ZqKXriCWQ"}},{"cell_type":"code","source":["# Dataset First Look\n","dataset.head()"],"metadata":{"id":"LWNFOSvLl09H"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Dataset Rows & Columns count"],"metadata":{"id":"7hBIi_osiCS2"}},{"cell_type":"code","source":["# Dataset Rows & Columns count\n","dataset.shape"],"metadata":{"id":"Kllu7SJgmLij"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Dataset Information"],"metadata":{"id":"JlHwYmJAmNHm"}},{"cell_type":"code","source":["# Dataset Info\n","dataset.info()"],"metadata":{"id":"e9hRXRi6meOf"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### Duplicate Values"],"metadata":{"id":"35m5QtbWiB9F"}},{"cell_type":"code","source":["# Dataset Duplicate Value Count\n","len(dataset[dataset.duplicated()])"],"metadata":{"id":"1sLdpKYkmox0"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### Missing Values/Null Values"],"metadata":{"id":"PoPl-ycgm1ru"}},{"cell_type":"code","source":["# Missing Values/Null Values Count\n","print(dataset.isnull().sum())"],"metadata":{"id":"GgHWkxvamxVg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Visualizing the missing values\n","sns.heatmap(dataset.isnull(), cbar=False)"],"metadata":{"id":"3q5wnI3om9sJ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### What did you know about your dataset?"],"metadata":{"id":"H0kj-8xxnORC"}},{"cell_type":"markdown","source":[" this is a yes bank data set it has been in the \n","news because of the fraud case Owing to this fact, it was interesting\n","to see how that impacted the stock prices of the company and whether Time \n","stock prices of the bank since its inception and includes closing, starting, highest, and lowest\n","The above dataset has 185 rows and 5 columns. There are no mising values and duplicate values in the dataset."],"metadata":{"id":"gfoNAAC-nUe_"}},{"cell_type":"markdown","source":["## ***2. Understanding  Variables***"],"metadata":{"id":"nA9Y7ga8ng1Z"}},{"cell_type":"code","source":["# Dataset Columns\n","dataset.columns"],"metadata":{"id":"j7xfkqrt5Ag5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Dataset Describe\n","dataset.describe(include='all')"],"metadata":{"id":"DnOaZdaE5Q5t"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### **Variables Description** "],"metadata":{"id":"PBTbrJXOngz2"}},{"cell_type":"markdown","source":["##**data** - date of record \n","##**open** - opening price \n","## **high** - highest price in the day \n","##**low**- lowest price in the day \n","##**close**- occupations of the speaker "],"metadata":{"id":"aJV4KIxSnxay"}},{"cell_type":"markdown","source":["### Check Unique Values for each variable."],"metadata":{"id":"u3PMJOP6ngxN"}},{"cell_type":"code","source":["# Check Unique Values for each variable.\n","for i in dataset.columns.tolist():\n","  print(\"No. of unique values in \",i,\"is\",dataset[i].nunique(),\".\")"],"metadata":{"id":"zms12Yq5n-jE"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 3. ***Data Wrangling***"],"metadata":{"id":"dauF4eBmngu3"}},{"cell_type":"markdown","source":["### Data Wrangling Code"],"metadata":{"id":"bKJF3rekwFvQ"}},{"cell_type":"code","source":["# Write your code to make your dataset analysis ready.\n","df=dataset.copy()\n","# Checking Shape of True Value\n","print(\"stock closing price  : -\",len(df[df['Close']==True]))\n","# Assigning churn customers data to variable df_churn\n","df_churn=df[(df['Close']==True)]"],"metadata":{"id":"wk-9a2fpoLcV"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##**Exploratory Data Analysis**"],"metadata":{"id":"9CyB39SF0A8t"}},{"cell_type":"code","source":["#dependent variable 'Close' price of stock \n","plt.figure(figsize=(15,10))\n","sns.distplot(dataset['Close'],color=\"y\") \n"],"metadata":{"id":"rYUDHe3_zwo9"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["when we do Exploratory Data Analysis on distplot we can see that  our data distribution is low level skewed  so in this sitution we can use log transformation for normalize data let lake log function and see the result of our data set "],"metadata":{"id":"IDmcBn1aBp4t"}},{"cell_type":"code","source":["# Dependent variable 'closing price '\n","plt.figure(figsize=(15,10))\n","sns.distplot(np.log10(dataset['Close']),color=\"y\")"],"metadata":{"id":"ZHqxmrSGzwkO"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["after doing the log transformation we can easily see that our data now normally distribution after that we can easily analysis data set "],"metadata":{"id":"5lq10yc3IKAa"}},{"cell_type":"code","source":["numeric_features = dataset.describe().columns"],"metadata":{"id":"SCtPlTFPzwd9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#@title Default title text\n","# plot a bar plot for each categorical feature count\n","\n","for col in numeric_features[:]:\n","    fig = plt.figure(figsize=(9, 6))\n","    ax = fig.gca()\n","    feature = dataset[col]\n","    feature.hist(bins=50, ax = ax)\n","    ax.axvline(feature.mean(), color='magenta', linestyle='dashed', linewidth=2)\n","    ax.axvline(feature.median(), color='cyan', linestyle='dashed', linewidth=2)    \n","    ax.set_title(col)\n","plt.show()"],"metadata":{"id":"Uo_D9H4ezwW0"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**log for greater skew**: log10(x) for positively skewed data, log10(max(x+1) - x) for negatively skewed data"],"metadata":{"id":"q5C-hZqyJ1Nn"}},{"cell_type":"code","source":["#@title Default title text\n","# plot a bar plot for each categorical feature count (\n","\n","for col in numeric_features[:]:\n","    fig = plt.figure(figsize=(9, 6))\n","    ax = fig.gca()\n","    feature = np.log(dataset[col])\n","    feature.hist(bins=50, ax = ax)\n","    ax.axvline(feature.mean(), color='magenta', linestyle='dashed', linewidth=2)\n","    ax.axvline(feature.median(), color='cyan', linestyle='dashed', linewidth=2)    \n","    ax.set_title(col)\n","plt.show()"],"metadata":{"id":"y8hmbgHO9kkJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def label_point(x, y, val, ax):\n","    a = pd.concat({'x': x, 'y': y, 'val': val}, axis=1)\n","    for i, point in a.iterrows():\n","        ax.text(point['x'], point['y'], str(point['val']))"],"metadata":{"id":"7cBjLaE59kTs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for col in numeric_features[:-1]:\n","    fig = plt.figure(figsize=(9, 6))\n","    ax = fig.gca()\n","    feature = dataset[col]\n","    label = dataset['Close']\n","    correlation = feature.corr(label)\n","    plt.scatter(x=feature, y=label)\n","    plt.xlabel(col)\n","    plt.ylabel('Close')\n","    ax.set_title('Close vs ' + col + '- correlation: ' + str(correlation))\n","    z = np.polyfit(dataset[col], dataset['Close'], 1)\n","    y_hat = np.poly1d(z)(dataset[col])\n","\n","    plt.plot(dataset[col], y_hat, \"r--\", lw=1)\n","\n","plt.show()"],"metadata":{"id":"uBSnOtsv9kKB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[" ## Correlation\n","plt.figure(figsize=(15,8))\n","correlation = dataset.corr()\n","sns.heatmap(abs(correlation), annot=True, cmap='coolwarm')"],"metadata":{"id":"Ji69nuos9kEf"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Every feature is extremely corelated with each other, so taking just one feature or average of these features would suffice for our regression model as linear regression assumes there is no multi colinearity in the features."],"metadata":{"id":"ushwVxWVeGT9"}},{"cell_type":"code","source":["# Creating a new feature based on average of other features in the dataset\n","df['OHL'] = df[['Open', 'High', 'Low']].mean(axis=1).round(2)\n","df.head()"],"metadata":{"id":"7ui0ZhXh9j-R"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#**Linear regression also assumes a linear relationship between the target variables and independent variables, let's check if such relationship exists through a scatter plot**"],"metadata":{"id":"T8N1BE9rr-9q"}},{"cell_type":"code","source":["\n","# scatter plot to see the relationship between dependent & independent variables\n","fig = plt.figure(figsize=(20,5))\n","ax = fig.gca()\n","plt.scatter(df['OHL'], df['Close'])\n","plt.xlabel('OHL')\n","plt.ylabel('Close')\n","ax.set_title('OHL vs Close')\n","z = np.polyfit(df['OHL'], df['Close'], 1)\n","y_hat = np.poly1d(z)(df['OHL'])\n","plt.plot(df['OHL'], y_hat, \"r--\", lw=1)\n","plt.show()\n","     "],"metadata":{"id":"to2cKyNMRbVH"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##**Train-Test Split**"],"metadata":{"id":"6jQedBEWxgiX"}},{"cell_type":"code","source":["from sklearn.model_selection import (cross_val_score,  # split train and test data on a timeseries\n","TimeSeriesSplit)\n"],"metadata":{"id":"fa_pmHEYyI3D"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","# 5 fold time-series cross-validation \n","tscv = TimeSeriesSplit(n_splits=5)"],"metadata":{"id":"l87FBqk4xgM8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","# function for splitting time-series dataset\n","def timeseries_train_test_split(X, y, test_size):\n","    \"\"\"\n","        Perform train-test split with respect to time series structure\n","    \"\"\"\n","    \n","    # get the index after which test set starts\n","    test_index = int(len(X)*(1-test_size))\n","    scaler = StandardScaler()\n","    X_train = X.iloc[:test_index]\n","    y_train = y.iloc[:test_index]\n","    X_test = X.iloc[test_index:]\n","    y_test = y.iloc[test_index:]\n","    \n","    return X_train, X_test, y_train, y_test"],"metadata":{"id":"7HCiExMG0TpZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","# choose appropriate dependent and independent variables\n","y = df.dropna().Close\n","X = df.dropna().drop(['Date','Close','Open','High','Low'], axis=1)\n","\n","# split the dataset into train and test sets\n","X_train, X_test, y_train, y_test = timeseries_train_test_split(X, y, test_size=0.2)"],"metadata":{"id":"bgH4duy99j2V"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"iRsAHk1K0fpS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"M6w2CzZf04JK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"21JmIYMG2hEo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"PTouz10C3oNN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"88JnJ1jN3w7j"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"vqbBqNaA33c0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"2sxKgKxu4Ip3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"T2LSJh154s8W"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"EgLJGffy4vm0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"foqY80Qu48N2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"ijx1rUOS5CUU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"AIJ1a-Zc5PY8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"btT3ZJBAO6Ik"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"yBRtdhth6JDE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"h1qC4yhBApWC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"YLhe8UmaBCEE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"I6quWQ1T9rtH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"dL9LWpySC6x_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"kQfvxBBHDvCa"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"0CTyd2UwEyNM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"nQsRhhZLFiDs"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## ***7. ML Model Implementation***"],"metadata":{"id":"VfCC591jGiD4"}},{"cell_type":"markdown","source":["### ML Model - 1"],"metadata":{"id":"OB4l2ZhMeS1U"}},{"cell_type":"code","source":["# ML Model - 1 Implementation\n","\n","# Fit the Algorithm\n","\n","# Predict on the model"],"metadata":{"id":"7ebyywQieS1U"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### 1. Explain the ML Model used and it's performance using Evaluation metric Score Chart."],"metadata":{"id":"ArJBuiUVfxKd"}},{"cell_type":"code","source":["# Visualizing evaluation Metric Score chart"],"metadata":{"id":"rqD5ZohzfxKe"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### 2. Cross- Validation & Hyperparameter Tuning"],"metadata":{"id":"4qY1EAkEfxKe"}},{"cell_type":"code","source":["# ML Model - 1 Implementation with hyperparameter optimization techniques (i.e., GridSearch CV, RandomSearch CV, Bayesian Optimization etc.)\n","\n","# Fit the Algorithm\n","\n","# Predict on the model"],"metadata":{"id":"Dy61ujd6fxKe"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### Which hyperparameter optimization technique have you used and why?"],"metadata":{"id":"PiV4Ypx8fxKe"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"negyGRa7fxKf"}},{"cell_type":"markdown","source":["##### Have you seen any improvement? Note down the improvement with updates Evaluation metric Score Chart."],"metadata":{"id":"TfvqoZmBfxKf"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"OaLui8CcfxKf"}},{"cell_type":"markdown","source":["### ML Model - 2"],"metadata":{"id":"dJ2tPlVmpsJ0"}},{"cell_type":"markdown","source":["#### 1. Explain the ML Model used and it's performance using Evaluation metric Score Chart."],"metadata":{"id":"JWYfwnehpsJ1"}},{"cell_type":"code","source":["# Visualizing evaluation Metric Score chart"],"metadata":{"id":"yEl-hgQWpsJ1"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### 2. Cross- Validation & Hyperparameter Tuning"],"metadata":{"id":"-jK_YjpMpsJ2"}},{"cell_type":"code","source":["# ML Model - 1 Implementation with hyperparameter optimization techniques (i.e., GridSearch CV, RandomSearch CV, Bayesian Optimization etc.)\n","\n","# Fit the Algorithm\n","\n","# Predict on the model"],"metadata":{"id":"Dn0EOfS6psJ2"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### Which hyperparameter optimization technique have you used and why?"],"metadata":{"id":"HAih1iBOpsJ2"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"9kBgjYcdpsJ2"}},{"cell_type":"markdown","source":["##### Have you seen any improvement? Note down the improvement with updates Evaluation metric Score Chart."],"metadata":{"id":"zVGeBEFhpsJ2"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"74yRdG6UpsJ3"}},{"cell_type":"markdown","source":["#### 3. Explain each evaluation metric's indication towards business and the business impact pf the ML model used."],"metadata":{"id":"bmKjuQ-FpsJ3"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"BDKtOrBQpsJ3"}},{"cell_type":"markdown","source":["### ML Model - 3"],"metadata":{"id":"Fze-IPXLpx6K"}},{"cell_type":"code","source":["# ML Model - 3 Implementation\n","\n","# Fit the Algorithm\n","\n","# Predict on the model"],"metadata":{"id":"FFrSXAtrpx6M"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### 1. Explain the ML Model used and it's performance using Evaluation metric Score Chart."],"metadata":{"id":"7AN1z2sKpx6M"}},{"cell_type":"code","source":["# Visualizing evaluation Metric Score chart"],"metadata":{"id":"xIY4lxxGpx6M"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### 2. Cross- Validation & Hyperparameter Tuning"],"metadata":{"id":"9PIHJqyupx6M"}},{"cell_type":"code","source":["# ML Model - 3 Implementation with hyperparameter optimization techniques (i.e., GridSearch CV, RandomSearch CV, Bayesian Optimization etc.)\n","\n","# Fit the Algorithm\n","\n","# Predict on the model"],"metadata":{"id":"eSVXuaSKpx6M"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### Which hyperparameter optimization technique have you used and why?"],"metadata":{"id":"_-qAgymDpx6N"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"lQMffxkwpx6N"}},{"cell_type":"markdown","source":["##### Have you seen any improvement? Note down the improvement with updates Evaluation metric Score Chart."],"metadata":{"id":"Z-hykwinpx6N"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"MzVzZC6opx6N"}},{"cell_type":"markdown","source":["### 1. Which Evaluation metrics did you consider for a positive business impact and why?"],"metadata":{"id":"h_CCil-SKHpo"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"jHVz9hHDKFms"}},{"cell_type":"markdown","source":["### 2. Which ML model did you choose from the above created models as your final prediction model and why?"],"metadata":{"id":"cBFFvTBNJzUa"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"6ksF5Q1LKTVm"}},{"cell_type":"markdown","source":["### 3. Explain the model which you have used and the feature importance using any model explainability tool?"],"metadata":{"id":"HvGl1hHyA_VK"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"YnvVTiIxBL-C"}},{"cell_type":"markdown","source":["## ***8.*** ***Future Work (Optional)***"],"metadata":{"id":"EyNgTHvd2WFk"}},{"cell_type":"markdown","source":["### 1. Save the best performing ml model in a pickle file or joblib file format for deployment process.\n"],"metadata":{"id":"KH5McJBi2d8v"}},{"cell_type":"code","source":["# Save the File"],"metadata":{"id":"bQIANRl32f4J"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 2. Again Load the saved model file and try to predict unseen data for a sanity check.\n"],"metadata":{"id":"iW_Lq9qf2h6X"}},{"cell_type":"code","source":["# Load the File and predict unseen data."],"metadata":{"id":"oEXk9ydD2nVC"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### ***Congrats! Your model is successfully created and ready for deployment on a live server for a real user interaction !!!***"],"metadata":{"id":"-Kee-DAl2viO"}},{"cell_type":"markdown","source":["# **Conclusion**"],"metadata":{"id":"gCX9965dhzqZ"}},{"cell_type":"markdown","source":["Write the conclusion here."],"metadata":{"id":"Fjb1IsQkh3yE"}},{"cell_type":"markdown","source":["### ***Hurrah! You have successfully completed your Machine Learning Capstone Project !!!***"],"metadata":{"id":"gIfDvo9L0UH2"}}]}